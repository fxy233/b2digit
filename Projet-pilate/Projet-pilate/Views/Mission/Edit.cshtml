@model Projet_pilate.Models.UpdateMissionViewModel
@using Projet_pilate.Models
@{
    ViewBag.Title = "Edit";
}

<h2>Modification de la mission</h2>

@*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

<div class="col-md-6">
    <div class="form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Start, "{0:dd/MM/yyyy}", new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.NewEnd, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewEnd, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.date } })
            @Html.ValidationMessageFor(model => model.NewEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Commentaire, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Commentaire,6,40, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.Commentaire, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" >
        <div class="col-md-10">
            @Html.LabelFor(model => model.AdresseMission, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.AdresseMission, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdresseMission, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

    @if (User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur-ventes") || User.IsInRole("Administrateur"))
    {
<div class="col-md-6">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.InfoFacturation, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.InfoFacturation, 4, 40, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InfoFacturation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Reference, 3, 40, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.DesignationFacturation, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DesignationFacturation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DesignationFacturation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.DelaiPaiement, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            <input type="text" value="@Model.DelaiPaiement" list="delaiPaiement" class="form-control" id="DelaiPaiement" asp-for="DelaiPaiement" name="DelaiPaiement" required />
            <datalist id="delaiPaiement">
                <option value="30 jours"></option>
                <option value="30 jours fin de mois"></option>
                <option value="45 jours"></option>
                <option value="45 jours fin de mois"></option>
                <option value="60 jours"></option>
                <option value="60 jours fin de mois"></option>
            </datalist>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.PrincipalBCID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            <input type="text" value="@ViewData["principalBCID"]" list="principalBCID" class="form-control" id="PrincipalBCID" asp-for="PrincipalBCID" name="PrincipalBCID" required />
            <datalist id="principalBCID">
                @*<option selected>@ViewData["contact"]</option>*@
                @{
                    @*                        <option selected>@ViewData["principalBCID"]</option>
                    *@ ApplicationDbContext db = new ApplicationDbContext();
                    foreach (var s in db.Subsidiaries.ToList())
                    {
                        @*<option value="@s.SubsidiaryID">@s.Name</option>*@
                        <option value="@s.Name"></option>
                    };
                }
            </datalist>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.InterBC1ID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.InterBC1ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterBC1ID, "", new { @class = "text-danger" })
            *@
            <input type="text" value="@ViewData["interBC1ID"]" list="interBC1ID" class="form-control" id="InterBC1ID" asp-for="InterBC1ID" name="InterBC1ID" required />
            <datalist id="interBC1ID">
                @{
                    @*<option selected>@ViewData["interBC1ID"]</option>*@
                    foreach (var s in db.Subsidiaries.ToList())
                    {
                        <option value="@s.Name"></option>
                    };
                    <option value="Rien"></option>
                }
            </datalist>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.TJInterBC1, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TJInterBC1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TJInterBC1, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.InterBC2ID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.InterBC2ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterBC2ID, "", new { @class = "text-danger" })
            *@
            <input type="text" value="@ViewData["interBC2ID"]" list="interBC2ID" class="form-control" id="InterBC2ID" asp-for="InterBC2ID" name="InterBC2ID" required />
            <datalist id="interBC2ID">
                @*<option selected>@ViewData["contact"]</option>*@
                @{
                    @*<option selected>@ViewData["interBC2ID"]</option>*@
                    foreach (var s in db.Subsidiaries.ToList())
                    {
                        <option value="@s.Name"></option>
                    };
                    <option value="Rien"></option>
                }
            </datalist>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.TJInterBC2, htmlAttributes: new { @class = "control-labe" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TJInterBC2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TJInterBC2, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

}

    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Enregistrer" class="btn btn-primary btn-large" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Retour à la liste", "ListeMissions", "Mission", new { @class = "btn btn-primary btn-large" })
</div>
