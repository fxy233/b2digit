@model Projet_pilate.Models.UpdateEmailViewModel

@{
    ViewBag.Title = "ChangeEmail";
}

<h2>Modification de l'email</h2>


@using (Html.BeginForm("ChangeEmail", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-primary btn-large" />
            </div>
        </div>
    </div>
}

<div>

    @if (User.IsInRole("Administrateur"))
    {
        @Html.ActionLink("Retourner à la liste", "Users", "Account", null, new { @class = "btn btn-default btn-large" })
    }
    else
    {
        @Html.ActionLink("Retour", "Index", "Manage", null, new { @class = "btn btn-default btn-large" })
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
