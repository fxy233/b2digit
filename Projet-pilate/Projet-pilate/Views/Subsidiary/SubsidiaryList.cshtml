@model IEnumerable<Projet_pilate.Models.DetailSubsidiaryViewModel>

@{
    ViewBag.Title = "SubsidiaryList";
}

<h2>Liste des filiales </h2>

@if (User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur"))
{
    <p>
        @Html.ActionLink("Créer une filiale", "CreateSubsidiary", "Subsidiary", new { @class = "btn btn-primary btn-large" })
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Siren)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PostaleCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ManagerFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ManagerLastName)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Siren)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostaleCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManagerFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManagerLastName)
            </td>
            <td>
                @Html.ActionLink("Modifier", "Edit", new { id = item.ID }, new { @class = "btn btn-primary btn-large" }) |
                @Html.ActionLink("Supprimer", "Delete", new { id = item.ID }, new { @class = "btn btn-primary btn-large", onclick = "return ConfirmationDialog()" })
                </tr>
            }
        </table>

@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))

<script>
    function ConfirmationDialog() {
        if (confirm("Etes vous certain de votre choix ?"))
            return true;
        else
            return false;
    }
</script>

