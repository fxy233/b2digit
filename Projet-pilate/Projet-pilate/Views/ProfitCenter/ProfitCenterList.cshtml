@model IEnumerable<Projet_pilate.Models.DetailProfitCenterViewModel>

@{
    ViewBag.Title = "ProfitCenterList";
}

<h2>Centres de profit</h2>
@if (User.IsInRole("Administrateur") || User.IsInRole("Super-Administrateur"))
{
    <p>
        @Html.RouteLink("Créer un centre de profit", "CreateProfitCenter", "ProfitCenter", new { @class = "btn btn-primary btn-large" })
    </p>
}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Owners)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PartOwners)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FatherProfitCenters)
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Cost)*@
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Turnover)*@
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owners)
            </td>
            @if (item.PartOwners == null)
            {
                <td>
                    Aucun
                </td>
            }
            else
            {
                <td>
                    @Html.DisplayFor(modelItem => item.PartOwners)
                </td>
            }
            @if (item.FatherProfitCenters == null)
            {
                <td>
                    Aucun
                </td>
            }
            else
            {
                <td>
                    @Html.DisplayFor(modelItem => item.FatherProfitCenters)
                </td>
            }
            <td>
                @*Html.DisplayFor(modelItem => item.Cost)*@
            </td>
            <td>
                @*Html.DisplayFor(modelItem => item.Turnover)*@
            </td>

            <td>
                @if (User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur"))
                {
                    @Html.ActionLink("Modifier", "EditProfitCenter", new { id = item.ID }, new { @class = "btn btn-primary btn-large" })
                    @*Html.ActionLink("Details", "Details", new { id=item.ID }) |*@
                    @Html.ActionLink("Supprimer", "DeleteProfitCenter", new { id = item.ID }, new { @class = "btn btn-primary btn-large", onclick = "return ConfirmationDialog()" })
                }
            </td>
        </tr>
    }

</table>

@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))

<script>
    function ConfirmationDialog() {
        if (confirm("Etes vous certain de votre choix ?"))
            return true;
        else
            return false;
    }
</script>