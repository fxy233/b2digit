@model Projet_pilate.Models.UpdateManagerViewModel

@{
    ViewBag.Title = "EditManager";
}

<h2>Modification d'un Manager </h2>

<script type="text/javascript" src="~/Scripts/jquery-3.5.1.js"></script>

<script>

    $(document).ready(function () {
        $("input[name='DateSortie']").removeAttr("data-val");
        $("input[name='DateSortie']").removeAttr("data-val-required");

        $('input[name="sortie"]').on('change', function () {
            if (this.checked) {
                $("input[name='DateSortie']").prop("readonly", false);
            } else {
                $("input[name='DateSortie']").prop("readonly", true);

            }
        });
        $("footer p").text("");
    })
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div >
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

<div class="col-md-6 form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-offset-1 col-md-2" style="margin-right:0px; margin-left:0px;padding-left:40px;">Sortie</label>
        <div class="col-md-2" style="margin-left:0px;"><input type="checkbox" name="sortie" value="sortie"></div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateSortie, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateSortie, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

    </div>

    <div class="form-group">
        <label class="col-md-2 control-label" for="Subsidiary">Filiale</label>
        <div class="col-md-10">
            <select class="form-control" id="Subsidiary" name="Subsidiary" required>
                @*<option selected>@ViewData["Subsidiary"]</option>*@
                <option selected>@Model.Subsidiary</option>
                @foreach (var subsidiary in Model.Subsidiaries)
                {
                    <option value="@subsidiary">@subsidiary</option>
                }
            </select>
        </div>
    </div>
</div>
    
<div class="col-md-6 form-horizontal">
    <div class="form-group">
        <label class="col-md-2 control-label" for="role">Rôle</label>
        <div class="col-md-10">
            <select class="form-control" id="role" name="role" required>
                <option selected>@Model.role</option>
                <option value="Directeur">Directeur</option>
                <option value="BM">BM</option>

            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MealCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MealCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MealCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TravelPackage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TravelPackage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TravelPackage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExceptionalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExceptionalCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExceptionalCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-2">
            <input type="submit" value="Valider" class="btn btn-primary btn-large" />
        </div>
        <div class="col-md-2">
            @Html.ActionLink("Retour à la liste", "ManagerList", "Manager", new { @class = "btn btn-primary btn-large" })
        </div>
    </div>
</div>
    
</div>


}

