@model IEnumerable<Projet_pilate.Models.DetailConsultantViewModel>
@using Projet_pilate.Models;

@{
    ViewBag.Title = "ConsultantList";
    Layout = "~/Views/Shared/_particular.cshtml";
}

<h2>Liste des consultants</h2>

<p>
    @Html.ActionLink("Créer un consultant", "CreateConsultant", "Consultant", new { @class = "btn btn-primary btn-large" })
</p>

<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }
</style>
<link href="~/Scripts/jquery.dataTables.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/jquery-3.5.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        var table = $('#mytable').DataTable({
            stateSave: true,

        });


    });
</script>

<style>
    .space {
        margin-bottom: 5px;
    }
</style>


@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "text-danger" })).ToHtmlString()))
<table class="display" id="mytable" style="width:95%">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EntryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DailyCost)
            </th>
            @*                <th>
                    @Html.DisplayNameFor(model => model.MonthlyCost)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ProfitCenter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subsidiary)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DailyCost)
            </td>
            @*                    <td>
            @Html.DisplayFor(modelItem => item.MonthlyCost)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ProfitCenter)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subsidiary)
            </td>

            @{
                ApplicationDbContext db = new ApplicationDbContext();
                if (User.IsInRole("Manager"))
                {
                    var email = User.Identity.Name;
                    var user = db.Users.Single(u => u.Email == email);
                    string name = user.FirstName + " " + user.LastName;
                    List<int> pIdlist = new List<int>();
                    foreach (var obj in db.profitCenters.ToList())
                    {
                        var manager = db.Managers.Single(m => m.ManagerID == obj.Owner);

                        if (manager.FirstName + " " + manager.LastName == name)
                        {
                            pIdlist.Add(obj.ProfitCenterID);
                        }
                        try
                        {
                            var manager2 = db.Managers.Single(m => m.ManagerID == obj.PartOwner);

                            if (manager2.FirstName + " " + manager2.LastName == name)
                            {
                                pIdlist.Add(obj.ProfitCenterID);
                            }
                        }
                        catch (Exception) { }


                    }

                    Boolean ability = false;
                    var pc = db.profitCenters.Single(pp => pp.Name == item.ProfitCenter);

                    if (pIdlist.Contains(pc.ProfitCenterID))
                    {
                        ability = true;
                    }
                    else
                    {
                        while (pc.FatherProfitCenterID != null)
                        {
                            pc = pc.FatherProfitCenter;
                            if (pIdlist.Contains(pc.ProfitCenterID))
                            {
                                ability = true;
                                break;
                            }
                        }
                    }

                    if (ability)
                    {
                        <td>
                            @Html.ActionLink("Modifier", "EditConsultant", new { id = item.ID }, new { @class = "btn-primary btn space", })

                        </td>
                        <td>
                            @Html.ActionLink("Supprimer", "DeleteConsultant", new { id = item.ID }, new { @class = "btn-primary btn space", onclick = "return ConfirmationDialog()" })
                        </td>
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                    }

                }
                else
                {
                    <td>
                        @Html.ActionLink("Modifier", "EditConsultant", new { id = item.ID }, new { @class = "btn-primary btn space", })

                    </td>
                    <td>
                        @Html.ActionLink("Supprimer", "DeleteConsultant", new { id = item.ID }, new { @class = "btn-primary btn space", onclick = "return ConfirmationDialog()" })
                    </td>
                }
            }


        </tr>
        }
    </tbody>


</table>

@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))
<script>
    function ConfirmationDialog() {
        if (confirm("Etes vous certain de votre choix ?"))
            return true;
        else
            return false;
    }
</script>

