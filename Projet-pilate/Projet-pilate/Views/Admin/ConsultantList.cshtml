@model IEnumerable<Projet_pilate.Models.DetailConsultantViewModel>

@{
    ViewBag.Title = "ConsultantList";
    Layout = "~/Views/Shared/_particular.cshtml";
}

<h2>Liste des consultants</h2>

<p>
    @Html.ActionLink("Créer un consultant", "CreateConsultant", "Consultant", new { @class = "btn btn-primary btn-large" })
</p>

<link href="~/Scripts/jquery.dataTables.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/jquery-3.5.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        $('#mytable').DataTable({
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    var select = $('<select><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });
    });
</script>


    <table class="display" id="mytable" style="width:80%">

        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EntryDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DailyCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MonthlyCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProfitCenter)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Subsidiary)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EntryDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DailyCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MonthlyCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProfitCenter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Subsidiary)
                    </td>
                    <td>
                        @Html.ActionLink("Modifier", "EditConsultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large" })
                        @Html.ActionLink("Supprimer", "DeleteConsultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large", onclick = "return ConfirmationDialog()" })
                    </td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.EntryDate)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.DailyCost)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.MonthlyCost)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.ProfitCenter)
                </th>
                <th style="border-color:white">
                    @Html.DisplayNameFor(model => model.Subsidiary)
                </th>

            </tr>
        </tfoot>

    </table>

@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))

<script>
    function ConfirmationDialog() {
        if (confirm("Etes vous certain de votre choix ?"))
            return true;
        else
            return false;
    }
</script>

