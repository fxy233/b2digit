
@model IEnumerable<Projet_pilate.Models.ActivityViewModel>

@{
    ViewBag.Title = "ListeCra";
}

<h2>Liste des comptes rendu d'activité du mois de @ViewBag.date.ToString("MMMM, yyyy", System.Globalization.CultureInfo.CurrentCulture)</h2>

<p><button onclick="sortTable()">Trier</button></p>
<table class="table" id="mytable">
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.ConsultantName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Satisfaction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NoBillDays)
        </th>
        @*<th>
                Detail
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.MissionName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkedDays)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.WorkedDaysWE)
        </th>
    </tr>

    @{string Previous = "";

        foreach (var item in Model)
        {

            if (item.MissionName == "Rien")
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConsultantName)
                    </td>
                    <td>
                        Ce consultant n'a pas encore saisi son CRA pendant le mois actif
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @*@if (item.ConsultantName != Previous)
                            {
                                @Html.DisplayFor(modelItem => item.ConsultantName)
                            }*@
                        @Html.DisplayFor(modelItem => item.ConsultantName)
                    </td>
                    <td>
                        @if (item.ConsultantName != Previous)
                        {
                            @Html.DisplayFor(modelItem => item.Satisfaction)
                        }
                    </td>
                    <td>
                        @if (item.ConsultantName != Previous)
                        {
                            @Html.DisplayFor(modelItem => item.NoBillDays)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MissionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkedDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkedDaysWE)
                    </td>
                    <td>
                        @if ((item.ConsultantName != Previous) && (User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur")) || User.IsInRole("Administrateur-ventes"))
                        {


                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large supp" })
                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large action" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.ID }, new { @class = "btn btn-primary btn-large" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.ID }, new { @class = "btn btn-primary btn-large action" })

                        }

                    </td>
                </tr>
                Previous = item.ConsultantName;
            }
        }


    }
    @*@{
            Dictionary<string, List<Projet_pilate.Models.ActivityViewModel>> list = new Dictionary<string, List<Projet_pilate.Models.ActivityViewModel>>();

            string PreviousConsultant = "";
            foreach (var item in Model)
            {
                if (item.ConsultantName != PreviousConsultant)
                {
                    List<Projet_pilate.Models.ActivityViewModel> l = new List<Projet_pilate.Models.ActivityViewModel>();
                    l.Add(item);
                    list.Add(item.ConsultantName,l);
                }
                else
                {
                    list[item.ConsultantName].Add(item);
                }
                PreviousConsultant = item.ConsultantName;
            }

            foreach (var item in list)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value[0].ConsultantName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value[0].Satisfaction)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value[0].NoBillDays)
                    </td>

                    <td>
                        <div style="width: 800px; height:100px; overflow:scroll;">
                            <table style="text-align: left;">
                                <tr>
                                    @foreach (var obj in item.Value)
                                    {
                                        <th style="padding-right: 7px">
                                            <div style="width:200px">
                                                @Html.DisplayNameFor(model => model.MissionName)
                                            </div>
                                        </th>

                                        <th style="padding-right: 7px">
                                            <div style="width:200px">
                                                @Html.DisplayNameFor(model => model.WorkedDays)
                                            </div>
                                        </th>

                                        <th style="padding-right: 7px">
                                            <div style="width:200px">
                                                @Html.DisplayNameFor(model => model.WorkedDaysWE)
                                            </div>
                                        </th>
                                    }
                                </tr>
                                <tr>
                                    @foreach (var obj in item.Value)
                                    {
                                        <td style="padding-right:7px">
                                            @Html.DisplayFor(modelItem => obj.MissionName)
                                        </td>

                                        <td style="padding-right:7px">
                                            @Html.DisplayFor(modelItem => obj.WorkedDays)
                                        </td>

                                        <td style="padding-right:7px">
                                            @Html.DisplayFor(modelItem => obj.WorkedDaysWE)
                                        </td>
                                    }
                                </tr>
                            </table>
                        </div>
                    </td>

                    <td>
                        @if ((User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur")) || User.IsInRole("Administrateur-ventes"))
                        {

                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.Value[0].ID }, new { @class = "btn btn-primary btn-large supp" })
                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.Value[0].ID }, new { @class = "btn btn-primary btn-large action" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.Value[0].ID }, new { @class = "btn btn-primary btn-large" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.Value[0].ID }, new { @class = "btn btn-primary btn-large action" })
                        }

                    </td>
                </tr>

            }
        }*@

</table>



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Vous êtes sur le point de Réinitialiser un Cra</h4>
            </div>
            <div class="modal-body">
                Êtes vous certain de votre choix ?
            </div>
            <div class="modal-footer">
                <input type="submit" class="btn btn-primary btn-large" value="valider" id="validation">
                <button type="button" class="btn btn-primary btn-large" data-dismiss="modal">Annuler</button>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script>

    var supp = document.querySelectorAll('.supp');
    var action = document.querySelectorAll('.action')

    action.forEach(element => {
        element.style.visibility = "hidden";
    });

    supp.forEach(element => {
        element.addEventListener('click', function (e) {
            console.log(e.target);
            console.log(element.nextElementSibling);

            $('#myModal').modal('show');
            e.preventDefault(e);
        })

        $('#validation').on('click', function () {
            var href = element.nextElementSibling.getAttribute("href");
            window.location.href = href;
        });
    });

    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("mytable");
        switching = true;
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];
                //check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    //if so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }


</script>
