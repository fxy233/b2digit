
@model IEnumerable<Projet_pilate.Models.ActivityViewModel>

@{
    ViewBag.Title = "ListeCra";
    Layout = "~/Views/Shared/_particular.cshtml";

}

<h2>Liste des comptes rendu d'activité du mois de @ViewBag.date.ToString("MMMM, yyyy", System.Globalization.CultureInfo.CurrentCulture)</h2>


@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<link href="~/Scripts/jquery.dataTables.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/jquery-3.5.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        $('#mytable').DataTable({
            stateSave: true,
        });
    });
</script>

<table class="display" id="mytable" style="width:90%">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.ConsultantName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Satisfaction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NoBillDays)
            </th>
            @*<th>
                Detail
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.MissionName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WorkedDays)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.WorkedDaysWE)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

    @{string Previous = "";

        foreach (var item in Model)
        {

            if (item.MissionName == "Rien")
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsultantName)
                </td>
                <td>
                    Ce consultant n'a pas encore saisi son CRA pendant le mois actif
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            }
            else
            {
                <tr>
                    <td>
                        @*@if (item.ConsultantName != Previous)
                            {
                                @Html.DisplayFor(modelItem => item.ConsultantName)
                            }*@
                        @Html.DisplayFor(modelItem => item.ConsultantName)
                    </td>
                    <td>
                        @if (item.ConsultantName != Previous)
                        {
                            @Html.DisplayFor(modelItem => item.Satisfaction)
                        }
                    </td>
                    <td>
                        @if (item.ConsultantName != Previous)
                        {
                            @Html.DisplayFor(modelItem => item.NoBillDays)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MissionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkedDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkedDaysWE)
                    </td>
                    <td>
                        @if ((item.ConsultantName != Previous) && (User.IsInRole("Super-Administrateur") || User.IsInRole("Administrateur")) || User.IsInRole("Administrateur-ventes"))
                        {


                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large supp" })
                            @Html.ActionLink("Réinitialiser CRA", "DeleteCra", "Consultant", new { id = item.ID }, new { @class = "btn btn-primary btn-large action" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.ID }, new { @class = "btn btn-primary btn-large" })
                            @Html.ActionLink("Détail", "CRAReadOnly", new { id = item.ID }, new { @class = "btn btn-primary btn-large action" })

                        }

                    </td>
                </tr>
                Previous = item.ConsultantName;
            }
        }


    }
    </tbody>

</table>



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Vous êtes sur le point de Réinitialiser un Cra</h4>
            </div>
            <div class="modal-body">
                Êtes vous certain de votre choix ?
            </div>
            <div class="modal-footer">
                <input type="submit" class="btn btn-primary btn-large" value="valider" id="validation">
                <button type="button" class="btn btn-primary btn-large" data-dismiss="modal">Annuler</button>
            </div>
        </div>
    </div>
</div>



<script>

    var supp = document.querySelectorAll('.supp');
    var action = document.querySelectorAll('.action')

    action.forEach(element => {
        element.style.visibility = "hidden";
    });

    supp.forEach(element => {
        element.addEventListener('click', function (e) {
            console.log(e.target);
            console.log(element.nextElementSibling);

            $('#myModal').modal('show');
            e.preventDefault(e);
        })

        $('#validation').on('click', function () {
            var href = element.nextElementSibling.getAttribute("href");
            window.location.href = href;
        });
    });

    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("mytable");
        switching = true;
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];
                //check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    //if so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }


</script>
