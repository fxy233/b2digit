@model IEnumerable<Projet_pilate.Models.DetailManagerViewModel>

@{
    ViewBag.Title = "ManagerList";
}

<h2>Liste des managers</h2>

@if (User.IsInRole("Administrateur") || User.IsInRole("Super-Administrateur"))
{
    <p>
        @Html.ActionLink("Créer un manager", "CreateManager")
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntryDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Subsidiary)
        </th>

        @if (User.IsInRole("Administrateur"))
        {
            <th>
                @Html.DisplayNameFor(model => model.MonthlyCost)
            </th>
        }

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subsidiary)
            </td>

            @if (User.IsInRole("Administrateur"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.MonthlyCost)
                </td>
            }

            <td>
                @*@Html.RouteLink("Créer un identifiant pour ce manager", "CreateUserManager", new { id = item.ID }) |*@
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |*@
                @*@Html.ActionLink("Details", "Details", new { id = item.ID }) |*@
                @Html.ActionLink("Supprimer", "DeleteManager", new { id = item.ID }, new { @class = "btn btn-primary btn-large", onclick = "return ConfirmationDialog()" })
            </td>
        </tr>
    }

</table>

@Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))

<script>
    function ConfirmationDialog() {
        if (confirm("Etes vous certain de votre choix ?"))
            return true;
        else
            return false;
    }
</script>
